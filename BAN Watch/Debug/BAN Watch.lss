
BAN Watch.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003e  00800200  00000946  000009da  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000946  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000039  0080023e  0080023e  00000a18  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a18  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  00000a48  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000011f8  00000000  00000000  00000aa8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000031f  00000000  00000000  00001ca0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000bd5  00000000  00000000  00001fbf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000144  00000000  00000000  00002b94  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00011883  00000000  00000000  00002cd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000639  00000000  00000000  0001455b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000003c8  00000000  00000000  00014b94  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0000432b  00000000  00000000  00014f5c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	ec c0       	rjmp	.+472    	; 0x23e <__vector_25>
  66:	00 00       	nop
  68:	99 c0       	rjmp	.+306    	; 0x19c <__vector_26>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e6 e4       	ldi	r30, 0x46	; 70
  fc:	f9 e0       	ldi	r31, 0x09	; 9
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	ae 33       	cpi	r26, 0x3E	; 62
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	ae e3       	ldi	r26, 0x3E	; 62
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a7 37       	cpi	r26, 0x77	; 119
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	8b d3       	rcall	.+1814   	; 0x836 <main>
 120:	10 c4       	rjmp	.+2080   	; 0x942 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <uart_putchar>:
	UBRR0H = MYUBRR >> 8;
    UBRR0L = MYUBRR;
    UCSR0B = (1<<RXEN0)|(1<<TXEN0);
	UCSR0A = (1<<U2X0);		
	*/	
    stdout = &mystdout; //Required for printf init
 124:	f8 94       	cli
 126:	20 91 6d 02 	lds	r18, 0x026D
 12a:	90 91 6c 02 	lds	r25, 0x026C
 12e:	29 13       	cpse	r18, r25
 130:	05 c0       	rjmp	.+10     	; 0x13c <uart_putchar+0x18>
 132:	e1 ec       	ldi	r30, 0xC1	; 193
 134:	f0 e0       	ldi	r31, 0x00	; 0
 136:	90 81       	ld	r25, Z
 138:	90 62       	ori	r25, 0x20	; 32
 13a:	90 83       	st	Z, r25
 13c:	60 91 6d 02 	lds	r22, 0x026D
 140:	90 91 6c 02 	lds	r25, 0x026C
 144:	49 2f       	mov	r20, r25
 146:	50 e0       	ldi	r21, 0x00	; 0
 148:	20 91 6e 02 	lds	r18, 0x026E
 14c:	30 e0       	ldi	r19, 0x00	; 0
 14e:	21 50       	subi	r18, 0x01	; 1
 150:	31 09       	sbc	r19, r1
 152:	42 17       	cp	r20, r18
 154:	53 07       	cpc	r21, r19
 156:	11 f0       	breq	.+4      	; 0x15c <uart_putchar+0x38>
 158:	9f 5f       	subi	r25, 0xFF	; 255
 15a:	01 c0       	rjmp	.+2      	; 0x15e <uart_putchar+0x3a>
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	69 13       	cpse	r22, r25
 160:	01 c0       	rjmp	.+2      	; 0x164 <uart_putchar+0x40>
 162:	ff cf       	rjmp	.-2      	; 0x162 <uart_putchar+0x3e>
 164:	ec e6       	ldi	r30, 0x6C	; 108
 166:	f2 e0       	ldi	r31, 0x02	; 2
 168:	90 81       	ld	r25, Z
 16a:	a0 91 6f 02 	lds	r26, 0x026F
 16e:	b0 91 70 02 	lds	r27, 0x0270
 172:	a9 0f       	add	r26, r25
 174:	b1 1d       	adc	r27, r1
 176:	8c 93       	st	X, r24
 178:	40 81       	ld	r20, Z
 17a:	24 2f       	mov	r18, r20
 17c:	30 e0       	ldi	r19, 0x00	; 0
 17e:	80 91 6e 02 	lds	r24, 0x026E
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	01 97       	sbiw	r24, 0x01	; 1
 186:	28 17       	cp	r18, r24
 188:	39 07       	cpc	r19, r25
 18a:	19 f0       	breq	.+6      	; 0x192 <uart_putchar+0x6e>
 18c:	81 e0       	ldi	r24, 0x01	; 1
 18e:	84 0f       	add	r24, r20
 190:	01 c0       	rjmp	.+2      	; 0x194 <uart_putchar+0x70>
 192:	80 e0       	ldi	r24, 0x00	; 0
 194:	80 93 6c 02 	sts	0x026C, r24
 198:	78 94       	sei
 19a:	08 95       	ret

0000019c <__vector_26>:
 19c:	1f 92       	push	r1
 19e:	0f 92       	push	r0
 1a0:	0f b6       	in	r0, 0x3f	; 63
 1a2:	0f 92       	push	r0
 1a4:	11 24       	eor	r1, r1
 1a6:	0b b6       	in	r0, 0x3b	; 59
 1a8:	0f 92       	push	r0
 1aa:	2f 93       	push	r18
 1ac:	3f 93       	push	r19
 1ae:	4f 93       	push	r20
 1b0:	5f 93       	push	r21
 1b2:	8f 93       	push	r24
 1b4:	9f 93       	push	r25
 1b6:	af 93       	push	r26
 1b8:	bf 93       	push	r27
 1ba:	ef 93       	push	r30
 1bc:	ff 93       	push	r31
 1be:	90 91 6d 02 	lds	r25, 0x026D
 1c2:	80 91 6c 02 	lds	r24, 0x026C
 1c6:	98 17       	cp	r25, r24
 1c8:	21 f1       	breq	.+72     	; 0x212 <__vector_26+0x76>
 1ca:	90 91 6d 02 	lds	r25, 0x026D
 1ce:	80 91 6c 02 	lds	r24, 0x026C
 1d2:	98 13       	cpse	r25, r24
 1d4:	01 c0       	rjmp	.+2      	; 0x1d8 <__vector_26+0x3c>
 1d6:	ff cf       	rjmp	.-2      	; 0x1d6 <__vector_26+0x3a>
 1d8:	ed e6       	ldi	r30, 0x6D	; 109
 1da:	f2 e0       	ldi	r31, 0x02	; 2
 1dc:	80 81       	ld	r24, Z
 1de:	a0 91 6f 02 	lds	r26, 0x026F
 1e2:	b0 91 70 02 	lds	r27, 0x0270
 1e6:	a8 0f       	add	r26, r24
 1e8:	b1 1d       	adc	r27, r1
 1ea:	5c 91       	ld	r21, X
 1ec:	40 81       	ld	r20, Z
 1ee:	24 2f       	mov	r18, r20
 1f0:	30 e0       	ldi	r19, 0x00	; 0
 1f2:	80 91 6e 02 	lds	r24, 0x026E
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	01 97       	sbiw	r24, 0x01	; 1
 1fa:	28 17       	cp	r18, r24
 1fc:	39 07       	cpc	r19, r25
 1fe:	19 f0       	breq	.+6      	; 0x206 <__vector_26+0x6a>
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	84 0f       	add	r24, r20
 204:	01 c0       	rjmp	.+2      	; 0x208 <__vector_26+0x6c>
 206:	80 e0       	ldi	r24, 0x00	; 0
 208:	80 93 6d 02 	sts	0x026D, r24
 20c:	50 93 c6 00 	sts	0x00C6, r21
 210:	05 c0       	rjmp	.+10     	; 0x21c <__vector_26+0x80>
 212:	e1 ec       	ldi	r30, 0xC1	; 193
 214:	f0 e0       	ldi	r31, 0x00	; 0
 216:	80 81       	ld	r24, Z
 218:	8f 7d       	andi	r24, 0xDF	; 223
 21a:	80 83       	st	Z, r24
 21c:	ff 91       	pop	r31
 21e:	ef 91       	pop	r30
 220:	bf 91       	pop	r27
 222:	af 91       	pop	r26
 224:	9f 91       	pop	r25
 226:	8f 91       	pop	r24
 228:	5f 91       	pop	r21
 22a:	4f 91       	pop	r20
 22c:	3f 91       	pop	r19
 22e:	2f 91       	pop	r18
 230:	0f 90       	pop	r0
 232:	0b be       	out	0x3b, r0	; 59
 234:	0f 90       	pop	r0
 236:	0f be       	out	0x3f, r0	; 63
 238:	0f 90       	pop	r0
 23a:	1f 90       	pop	r1
 23c:	18 95       	reti

0000023e <__vector_25>:
 23e:	1f 92       	push	r1
 240:	0f 92       	push	r0
 242:	0f b6       	in	r0, 0x3f	; 63
 244:	0f 92       	push	r0
 246:	11 24       	eor	r1, r1
 248:	0b b6       	in	r0, 0x3b	; 59
 24a:	0f 92       	push	r0
 24c:	2f 93       	push	r18
 24e:	3f 93       	push	r19
 250:	4f 93       	push	r20
 252:	5f 93       	push	r21
 254:	6f 93       	push	r22
 256:	8f 93       	push	r24
 258:	9f 93       	push	r25
 25a:	af 93       	push	r26
 25c:	bf 93       	push	r27
 25e:	ef 93       	push	r30
 260:	ff 93       	push	r31
 262:	50 91 c6 00 	lds	r21, 0x00C6
 266:	60 91 68 02 	lds	r22, 0x0268
 26a:	40 91 67 02 	lds	r20, 0x0267
 26e:	24 2f       	mov	r18, r20
 270:	30 e0       	ldi	r19, 0x00	; 0
 272:	80 91 69 02 	lds	r24, 0x0269
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	01 97       	sbiw	r24, 0x01	; 1
 27a:	28 17       	cp	r18, r24
 27c:	39 07       	cpc	r19, r25
 27e:	19 f0       	breq	.+6      	; 0x286 <__vector_25+0x48>
 280:	81 e0       	ldi	r24, 0x01	; 1
 282:	84 0f       	add	r24, r20
 284:	01 c0       	rjmp	.+2      	; 0x288 <__vector_25+0x4a>
 286:	80 e0       	ldi	r24, 0x00	; 0
 288:	68 13       	cpse	r22, r24
 28a:	01 c0       	rjmp	.+2      	; 0x28e <__vector_25+0x50>
 28c:	ff cf       	rjmp	.-2      	; 0x28c <__vector_25+0x4e>
 28e:	e7 e6       	ldi	r30, 0x67	; 103
 290:	f2 e0       	ldi	r31, 0x02	; 2
 292:	80 81       	ld	r24, Z
 294:	a0 91 6a 02 	lds	r26, 0x026A
 298:	b0 91 6b 02 	lds	r27, 0x026B
 29c:	a8 0f       	add	r26, r24
 29e:	b1 1d       	adc	r27, r1
 2a0:	5c 93       	st	X, r21
 2a2:	40 81       	ld	r20, Z
 2a4:	24 2f       	mov	r18, r20
 2a6:	30 e0       	ldi	r19, 0x00	; 0
 2a8:	80 91 69 02 	lds	r24, 0x0269
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	01 97       	sbiw	r24, 0x01	; 1
 2b0:	28 17       	cp	r18, r24
 2b2:	39 07       	cpc	r19, r25
 2b4:	19 f0       	breq	.+6      	; 0x2bc <__vector_25+0x7e>
 2b6:	81 e0       	ldi	r24, 0x01	; 1
 2b8:	84 0f       	add	r24, r20
 2ba:	01 c0       	rjmp	.+2      	; 0x2be <__vector_25+0x80>
 2bc:	80 e0       	ldi	r24, 0x00	; 0
 2be:	80 93 67 02 	sts	0x0267, r24
 2c2:	ff 91       	pop	r31
 2c4:	ef 91       	pop	r30
 2c6:	bf 91       	pop	r27
 2c8:	af 91       	pop	r26
 2ca:	9f 91       	pop	r25
 2cc:	8f 91       	pop	r24
 2ce:	6f 91       	pop	r22
 2d0:	5f 91       	pop	r21
 2d2:	4f 91       	pop	r20
 2d4:	3f 91       	pop	r19
 2d6:	2f 91       	pop	r18
 2d8:	0f 90       	pop	r0
 2da:	0b be       	out	0x3b, r0	; 59
 2dc:	0f 90       	pop	r0
 2de:	0f be       	out	0x3f, r0	; 63
 2e0:	0f 90       	pop	r0
 2e2:	1f 90       	pop	r1
 2e4:	18 95       	reti

000002e6 <send_byte>:
 2e6:	8e bd       	out	0x2e, r24	; 46
 2e8:	0d b4       	in	r0, 0x2d	; 45
 2ea:	07 fe       	sbrs	r0, 7
 2ec:	fd cf       	rjmp	.-6      	; 0x2e8 <send_byte+0x2>
 2ee:	08 95       	ret

000002f0 <iniSPI>:
 2f0:	20 9a       	sbi	0x04, 0	; 4
 2f2:	28 9a       	sbi	0x05, 0	; 5
 2f4:	8c b5       	in	r24, 0x2c	; 44
 2f6:	8b 7f       	andi	r24, 0xFB	; 251
 2f8:	8c bd       	out	0x2c, r24	; 44
 2fa:	8f e5       	ldi	r24, 0x5F	; 95
 2fc:	8c bd       	out	0x2c, r24	; 44
 2fe:	8c b5       	in	r24, 0x2c	; 44
 300:	8d 7f       	andi	r24, 0xFD	; 253
 302:	8c bd       	out	0x2c, r24	; 44
 304:	8c b5       	in	r24, 0x2c	; 44
 306:	8e 7f       	andi	r24, 0xFE	; 254
 308:	8c bd       	out	0x2c, r24	; 44
 30a:	89 ef       	ldi	r24, 0xF9	; 249
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	01 97       	sbiw	r24, 0x01	; 1
 310:	f1 f7       	brne	.-4      	; 0x30e <iniSPI+0x1e>
 312:	00 c0       	rjmp	.+0      	; 0x314 <iniSPI+0x24>
 314:	00 00       	nop
 316:	08 95       	ret

00000318 <accl>:
 318:	cf 93       	push	r28
 31a:	df 93       	push	r29
 31c:	00 d0       	rcall	.+0      	; 0x31e <accl+0x6>
 31e:	00 d0       	rcall	.+0      	; 0x320 <accl+0x8>
 320:	cd b7       	in	r28, 0x3d	; 61
 322:	de b7       	in	r29, 0x3e	; 62
 324:	87 e0       	ldi	r24, 0x07	; 7
 326:	84 b9       	out	0x04, r24	; 4
 328:	80 e0       	ldi	r24, 0x00	; 0
 32a:	92 e0       	ldi	r25, 0x02	; 2
 32c:	90 93 74 02 	sts	0x0274, r25
 330:	80 93 73 02 	sts	0x0273, r24
 334:	dd df       	rcall	.-70     	; 0x2f0 <iniSPI>
 336:	10 92 52 02 	sts	0x0252, r1
 33a:	40 e0       	ldi	r20, 0x00	; 0
 33c:	2d e6       	ldi	r18, 0x6D	; 109
 33e:	32 e0       	ldi	r19, 0x02	; 2
 340:	ec e6       	ldi	r30, 0x6C	; 108
 342:	f2 e0       	ldi	r31, 0x02	; 2
 344:	81 ec       	ldi	r24, 0xC1	; 193
 346:	90 e0       	ldi	r25, 0x00	; 0
 348:	0f 2e       	mov	r0, r31
 34a:	fe e6       	ldi	r31, 0x6E	; 110
 34c:	cf 2e       	mov	r12, r31
 34e:	f2 e0       	ldi	r31, 0x02	; 2
 350:	df 2e       	mov	r13, r31
 352:	f0 2d       	mov	r31, r0
 354:	10 e0       	ldi	r17, 0x00	; 0
 356:	50 e0       	ldi	r21, 0x00	; 0
 358:	4a 5c       	subi	r20, 0xCA	; 202
 35a:	5d 4f       	sbci	r21, 0xFD	; 253
 35c:	da 01       	movw	r26, r20
 35e:	fc 90       	ld	r15, X
 360:	f8 94       	cli
 362:	d9 01       	movw	r26, r18
 364:	5c 91       	ld	r21, X
 366:	40 81       	ld	r20, Z
 368:	54 13       	cpse	r21, r20
 36a:	04 c0       	rjmp	.+8      	; 0x374 <accl+0x5c>
 36c:	dc 01       	movw	r26, r24
 36e:	4c 91       	ld	r20, X
 370:	40 62       	ori	r20, 0x20	; 32
 372:	4c 93       	st	X, r20
 374:	d9 01       	movw	r26, r18
 376:	ec 90       	ld	r14, X
 378:	00 81       	ld	r16, Z
 37a:	60 2f       	mov	r22, r16
 37c:	70 e0       	ldi	r23, 0x00	; 0
 37e:	d6 01       	movw	r26, r12
 380:	4c 91       	ld	r20, X
 382:	50 e0       	ldi	r21, 0x00	; 0
 384:	41 50       	subi	r20, 0x01	; 1
 386:	51 09       	sbc	r21, r1
 388:	64 17       	cp	r22, r20
 38a:	75 07       	cpc	r23, r21
 38c:	19 f0       	breq	.+6      	; 0x394 <accl+0x7c>
 38e:	41 e0       	ldi	r20, 0x01	; 1
 390:	40 0f       	add	r20, r16
 392:	01 c0       	rjmp	.+2      	; 0x396 <accl+0x7e>
 394:	41 2f       	mov	r20, r17
 396:	e4 12       	cpse	r14, r20
 398:	01 c0       	rjmp	.+2      	; 0x39c <accl+0x84>
 39a:	ff cf       	rjmp	.-2      	; 0x39a <accl+0x82>
 39c:	60 81       	ld	r22, Z
 39e:	40 91 6f 02 	lds	r20, 0x026F
 3a2:	50 91 70 02 	lds	r21, 0x0270
 3a6:	46 0f       	add	r20, r22
 3a8:	51 1d       	adc	r21, r1
 3aa:	da 01       	movw	r26, r20
 3ac:	fc 92       	st	X, r15
 3ae:	00 81       	ld	r16, Z
 3b0:	60 2f       	mov	r22, r16
 3b2:	70 e0       	ldi	r23, 0x00	; 0
 3b4:	d6 01       	movw	r26, r12
 3b6:	4c 91       	ld	r20, X
 3b8:	50 e0       	ldi	r21, 0x00	; 0
 3ba:	41 50       	subi	r20, 0x01	; 1
 3bc:	51 09       	sbc	r21, r1
 3be:	64 17       	cp	r22, r20
 3c0:	75 07       	cpc	r23, r21
 3c2:	19 f0       	breq	.+6      	; 0x3ca <accl+0xb2>
 3c4:	41 e0       	ldi	r20, 0x01	; 1
 3c6:	40 0f       	add	r20, r16
 3c8:	01 c0       	rjmp	.+2      	; 0x3cc <accl+0xb4>
 3ca:	41 2f       	mov	r20, r17
 3cc:	40 83       	st	Z, r20
 3ce:	78 94       	sei
 3d0:	40 91 52 02 	lds	r20, 0x0252
 3d4:	4f 5f       	subi	r20, 0xFF	; 255
 3d6:	40 93 52 02 	sts	0x0252, r20
 3da:	47 30       	cpi	r20, 0x07	; 7
 3dc:	08 f4       	brcc	.+2      	; 0x3e0 <accl+0xc8>
 3de:	bb cf       	rjmp	.-138    	; 0x356 <accl+0x3e>
 3e0:	bf ef       	ldi	r27, 0xFF	; 255
 3e2:	e4 e3       	ldi	r30, 0x34	; 52
 3e4:	fc e0       	ldi	r31, 0x0C	; 12
 3e6:	b1 50       	subi	r27, 0x01	; 1
 3e8:	e0 40       	sbci	r30, 0x00	; 0
 3ea:	f0 40       	sbci	r31, 0x00	; 0
 3ec:	e1 f7       	brne	.-8      	; 0x3e6 <accl+0xce>
 3ee:	00 c0       	rjmp	.+0      	; 0x3f0 <accl+0xd8>
 3f0:	00 00       	nop
 3f2:	10 92 52 02 	sts	0x0252, r1
 3f6:	40 e0       	ldi	r20, 0x00	; 0
 3f8:	2d e6       	ldi	r18, 0x6D	; 109
 3fa:	32 e0       	ldi	r19, 0x02	; 2
 3fc:	ec e6       	ldi	r30, 0x6C	; 108
 3fe:	f2 e0       	ldi	r31, 0x02	; 2
 400:	81 ec       	ldi	r24, 0xC1	; 193
 402:	90 e0       	ldi	r25, 0x00	; 0
 404:	0f 2e       	mov	r0, r31
 406:	fe e6       	ldi	r31, 0x6E	; 110
 408:	cf 2e       	mov	r12, r31
 40a:	f2 e0       	ldi	r31, 0x02	; 2
 40c:	df 2e       	mov	r13, r31
 40e:	f0 2d       	mov	r31, r0
 410:	10 e0       	ldi	r17, 0x00	; 0
 412:	50 e0       	ldi	r21, 0x00	; 0
 414:	49 5e       	subi	r20, 0xE9	; 233
 416:	5d 4f       	sbci	r21, 0xFD	; 253
 418:	da 01       	movw	r26, r20
 41a:	fc 90       	ld	r15, X
 41c:	f8 94       	cli
 41e:	d9 01       	movw	r26, r18
 420:	5c 91       	ld	r21, X
 422:	40 81       	ld	r20, Z
 424:	54 13       	cpse	r21, r20
 426:	04 c0       	rjmp	.+8      	; 0x430 <accl+0x118>
 428:	dc 01       	movw	r26, r24
 42a:	4c 91       	ld	r20, X
 42c:	40 62       	ori	r20, 0x20	; 32
 42e:	4c 93       	st	X, r20
 430:	d9 01       	movw	r26, r18
 432:	ec 90       	ld	r14, X
 434:	00 81       	ld	r16, Z
 436:	60 2f       	mov	r22, r16
 438:	70 e0       	ldi	r23, 0x00	; 0
 43a:	d6 01       	movw	r26, r12
 43c:	4c 91       	ld	r20, X
 43e:	50 e0       	ldi	r21, 0x00	; 0
 440:	41 50       	subi	r20, 0x01	; 1
 442:	51 09       	sbc	r21, r1
 444:	64 17       	cp	r22, r20
 446:	75 07       	cpc	r23, r21
 448:	19 f0       	breq	.+6      	; 0x450 <accl+0x138>
 44a:	41 e0       	ldi	r20, 0x01	; 1
 44c:	40 0f       	add	r20, r16
 44e:	01 c0       	rjmp	.+2      	; 0x452 <accl+0x13a>
 450:	41 2f       	mov	r20, r17
 452:	e4 12       	cpse	r14, r20
 454:	01 c0       	rjmp	.+2      	; 0x458 <accl+0x140>
 456:	ff cf       	rjmp	.-2      	; 0x456 <accl+0x13e>
 458:	60 81       	ld	r22, Z
 45a:	40 91 6f 02 	lds	r20, 0x026F
 45e:	50 91 70 02 	lds	r21, 0x0270
 462:	46 0f       	add	r20, r22
 464:	51 1d       	adc	r21, r1
 466:	da 01       	movw	r26, r20
 468:	fc 92       	st	X, r15
 46a:	00 81       	ld	r16, Z
 46c:	60 2f       	mov	r22, r16
 46e:	70 e0       	ldi	r23, 0x00	; 0
 470:	d6 01       	movw	r26, r12
 472:	4c 91       	ld	r20, X
 474:	50 e0       	ldi	r21, 0x00	; 0
 476:	41 50       	subi	r20, 0x01	; 1
 478:	51 09       	sbc	r21, r1
 47a:	64 17       	cp	r22, r20
 47c:	75 07       	cpc	r23, r21
 47e:	19 f0       	breq	.+6      	; 0x486 <accl+0x16e>
 480:	41 e0       	ldi	r20, 0x01	; 1
 482:	40 0f       	add	r20, r16
 484:	01 c0       	rjmp	.+2      	; 0x488 <accl+0x170>
 486:	41 2f       	mov	r20, r17
 488:	40 83       	st	Z, r20
 48a:	78 94       	sei
 48c:	40 91 52 02 	lds	r20, 0x0252
 490:	4f 5f       	subi	r20, 0xFF	; 255
 492:	40 93 52 02 	sts	0x0252, r20
 496:	45 30       	cpi	r20, 0x05	; 5
 498:	08 f4       	brcc	.+2      	; 0x49c <accl+0x184>
 49a:	bb cf       	rjmp	.-138    	; 0x412 <accl+0xfa>
 49c:	b1 2c       	mov	r11, r1
 49e:	0f 2e       	mov	r0, r31
 4a0:	fd e6       	ldi	r31, 0x6D	; 109
 4a2:	8f 2e       	mov	r8, r31
 4a4:	f2 e0       	ldi	r31, 0x02	; 2
 4a6:	9f 2e       	mov	r9, r31
 4a8:	f0 2d       	mov	r31, r0
 4aa:	0c e6       	ldi	r16, 0x6C	; 108
 4ac:	12 e0       	ldi	r17, 0x02	; 2
 4ae:	0f 2e       	mov	r0, r31
 4b0:	f1 ec       	ldi	r31, 0xC1	; 193
 4b2:	cf 2e       	mov	r12, r31
 4b4:	d1 2c       	mov	r13, r1
 4b6:	f0 2d       	mov	r31, r0
 4b8:	0f 2e       	mov	r0, r31
 4ba:	fe e6       	ldi	r31, 0x6E	; 110
 4bc:	ef 2e       	mov	r14, r31
 4be:	f2 e0       	ldi	r31, 0x02	; 2
 4c0:	ff 2e       	mov	r15, r31
 4c2:	f0 2d       	mov	r31, r0
 4c4:	ab 2c       	mov	r10, r11
 4c6:	28 98       	cbi	0x05, 0	; 5
 4c8:	8d e2       	ldi	r24, 0x2D	; 45
 4ca:	0d df       	rcall	.-486    	; 0x2e6 <send_byte>
 4cc:	88 e2       	ldi	r24, 0x28	; 40
 4ce:	0b df       	rcall	.-490    	; 0x2e6 <send_byte>
 4d0:	28 9a       	sbi	0x05, 0	; 5
 4d2:	e1 ee       	ldi	r30, 0xE1	; 225
 4d4:	f4 e0       	ldi	r31, 0x04	; 4
 4d6:	31 97       	sbiw	r30, 0x01	; 1
 4d8:	f1 f7       	brne	.-4      	; 0x4d6 <accl+0x1be>
 4da:	00 c0       	rjmp	.+0      	; 0x4dc <accl+0x1c4>
 4dc:	00 00       	nop
 4de:	28 98       	cbi	0x05, 0	; 5
 4e0:	8d ea       	ldi	r24, 0xAD	; 173
 4e2:	01 df       	rcall	.-510    	; 0x2e6 <send_byte>
 4e4:	8b 2d       	mov	r24, r11
 4e6:	ff de       	rcall	.-514    	; 0x2e6 <send_byte>
 4e8:	6e b5       	in	r22, 0x2e	; 46
 4ea:	28 9a       	sbi	0x05, 0	; 5
 4ec:	b0 92 52 02 	sts	0x0252, r11
 4f0:	8b 2d       	mov	r24, r11
 4f2:	e8 2f       	mov	r30, r24
 4f4:	f0 e0       	ldi	r31, 0x00	; 0
 4f6:	e2 5f       	subi	r30, 0xF2	; 242
 4f8:	fd 4f       	sbci	r31, 0xFD	; 253
 4fa:	50 81       	ld	r21, Z
 4fc:	f8 94       	cli
 4fe:	d4 01       	movw	r26, r8
 500:	9c 91       	ld	r25, X
 502:	f8 01       	movw	r30, r16
 504:	80 81       	ld	r24, Z
 506:	98 13       	cpse	r25, r24
 508:	04 c0       	rjmp	.+8      	; 0x512 <accl+0x1fa>
 50a:	d6 01       	movw	r26, r12
 50c:	8c 91       	ld	r24, X
 50e:	80 62       	ori	r24, 0x20	; 32
 510:	8c 93       	st	X, r24
 512:	f4 01       	movw	r30, r8
 514:	70 81       	ld	r23, Z
 516:	d8 01       	movw	r26, r16
 518:	4c 91       	ld	r20, X
 51a:	24 2f       	mov	r18, r20
 51c:	30 e0       	ldi	r19, 0x00	; 0
 51e:	f7 01       	movw	r30, r14
 520:	80 81       	ld	r24, Z
 522:	90 e0       	ldi	r25, 0x00	; 0
 524:	01 97       	sbiw	r24, 0x01	; 1
 526:	28 17       	cp	r18, r24
 528:	39 07       	cpc	r19, r25
 52a:	19 f0       	breq	.+6      	; 0x532 <accl+0x21a>
 52c:	81 e0       	ldi	r24, 0x01	; 1
 52e:	84 0f       	add	r24, r20
 530:	01 c0       	rjmp	.+2      	; 0x534 <accl+0x21c>
 532:	8a 2d       	mov	r24, r10
 534:	78 13       	cpse	r23, r24
 536:	01 c0       	rjmp	.+2      	; 0x53a <accl+0x222>
 538:	ff cf       	rjmp	.-2      	; 0x538 <accl+0x220>
 53a:	d8 01       	movw	r26, r16
 53c:	8c 91       	ld	r24, X
 53e:	e0 91 6f 02 	lds	r30, 0x026F
 542:	f0 91 70 02 	lds	r31, 0x0270
 546:	e8 0f       	add	r30, r24
 548:	f1 1d       	adc	r31, r1
 54a:	50 83       	st	Z, r21
 54c:	8c 91       	ld	r24, X
 54e:	48 2f       	mov	r20, r24
 550:	50 e0       	ldi	r21, 0x00	; 0
 552:	f7 01       	movw	r30, r14
 554:	20 81       	ld	r18, Z
 556:	30 e0       	ldi	r19, 0x00	; 0
 558:	21 50       	subi	r18, 0x01	; 1
 55a:	31 09       	sbc	r19, r1
 55c:	42 17       	cp	r20, r18
 55e:	53 07       	cpc	r21, r19
 560:	11 f0       	breq	.+4      	; 0x566 <accl+0x24e>
 562:	8f 5f       	subi	r24, 0xFF	; 255
 564:	01 c0       	rjmp	.+2      	; 0x568 <accl+0x250>
 566:	8a 2d       	mov	r24, r10
 568:	d8 01       	movw	r26, r16
 56a:	8c 93       	st	X, r24
 56c:	78 94       	sei
 56e:	80 91 52 02 	lds	r24, 0x0252
 572:	8f 5f       	subi	r24, 0xFF	; 255
 574:	80 93 52 02 	sts	0x0252, r24
 578:	88 30       	cpi	r24, 0x08	; 8
 57a:	08 f4       	brcc	.+2      	; 0x57e <accl+0x266>
 57c:	ba cf       	rjmp	.-140    	; 0x4f2 <accl+0x1da>
 57e:	bf e3       	ldi	r27, 0x3F	; 63
 580:	ed e0       	ldi	r30, 0x0D	; 13
 582:	f3 e0       	ldi	r31, 0x03	; 3
 584:	b1 50       	subi	r27, 0x01	; 1
 586:	e0 40       	sbci	r30, 0x00	; 0
 588:	f0 40       	sbci	r31, 0x00	; 0
 58a:	e1 f7       	brne	.-8      	; 0x584 <accl+0x26c>
 58c:	00 c0       	rjmp	.+0      	; 0x58e <accl+0x276>
 58e:	00 00       	nop
 590:	68 32       	cpi	r22, 0x28	; 40
 592:	09 f0       	breq	.+2      	; 0x596 <accl+0x27e>
 594:	98 cf       	rjmp	.-208    	; 0x4c6 <accl+0x1ae>
 596:	10 92 52 02 	sts	0x0252, r1
 59a:	40 e0       	ldi	r20, 0x00	; 0
 59c:	2d e6       	ldi	r18, 0x6D	; 109
 59e:	32 e0       	ldi	r19, 0x02	; 2
 5a0:	ec e6       	ldi	r30, 0x6C	; 108
 5a2:	f2 e0       	ldi	r31, 0x02	; 2
 5a4:	81 ec       	ldi	r24, 0xC1	; 193
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	0f 2e       	mov	r0, r31
 5aa:	fe e6       	ldi	r31, 0x6E	; 110
 5ac:	cf 2e       	mov	r12, r31
 5ae:	f2 e0       	ldi	r31, 0x02	; 2
 5b0:	df 2e       	mov	r13, r31
 5b2:	f0 2d       	mov	r31, r0
 5b4:	10 e0       	ldi	r17, 0x00	; 0
 5b6:	50 e0       	ldi	r21, 0x00	; 0
 5b8:	48 5d       	subi	r20, 0xD8	; 216
 5ba:	5d 4f       	sbci	r21, 0xFD	; 253
 5bc:	da 01       	movw	r26, r20
 5be:	fc 90       	ld	r15, X
 5c0:	f8 94       	cli
 5c2:	d9 01       	movw	r26, r18
 5c4:	5c 91       	ld	r21, X
 5c6:	40 81       	ld	r20, Z
 5c8:	54 13       	cpse	r21, r20
 5ca:	04 c0       	rjmp	.+8      	; 0x5d4 <accl+0x2bc>
 5cc:	dc 01       	movw	r26, r24
 5ce:	4c 91       	ld	r20, X
 5d0:	40 62       	ori	r20, 0x20	; 32
 5d2:	4c 93       	st	X, r20
 5d4:	d9 01       	movw	r26, r18
 5d6:	ec 90       	ld	r14, X
 5d8:	00 81       	ld	r16, Z
 5da:	60 2f       	mov	r22, r16
 5dc:	70 e0       	ldi	r23, 0x00	; 0
 5de:	d6 01       	movw	r26, r12
 5e0:	4c 91       	ld	r20, X
 5e2:	50 e0       	ldi	r21, 0x00	; 0
 5e4:	41 50       	subi	r20, 0x01	; 1
 5e6:	51 09       	sbc	r21, r1
 5e8:	64 17       	cp	r22, r20
 5ea:	75 07       	cpc	r23, r21
 5ec:	19 f0       	breq	.+6      	; 0x5f4 <accl+0x2dc>
 5ee:	41 e0       	ldi	r20, 0x01	; 1
 5f0:	40 0f       	add	r20, r16
 5f2:	01 c0       	rjmp	.+2      	; 0x5f6 <accl+0x2de>
 5f4:	41 2f       	mov	r20, r17
 5f6:	e4 12       	cpse	r14, r20
 5f8:	01 c0       	rjmp	.+2      	; 0x5fc <accl+0x2e4>
 5fa:	ff cf       	rjmp	.-2      	; 0x5fa <accl+0x2e2>
 5fc:	60 81       	ld	r22, Z
 5fe:	40 91 6f 02 	lds	r20, 0x026F
 602:	50 91 70 02 	lds	r21, 0x0270
 606:	46 0f       	add	r20, r22
 608:	51 1d       	adc	r21, r1
 60a:	da 01       	movw	r26, r20
 60c:	fc 92       	st	X, r15
 60e:	00 81       	ld	r16, Z
 610:	60 2f       	mov	r22, r16
 612:	70 e0       	ldi	r23, 0x00	; 0
 614:	d6 01       	movw	r26, r12
 616:	4c 91       	ld	r20, X
 618:	50 e0       	ldi	r21, 0x00	; 0
 61a:	41 50       	subi	r20, 0x01	; 1
 61c:	51 09       	sbc	r21, r1
 61e:	64 17       	cp	r22, r20
 620:	75 07       	cpc	r23, r21
 622:	19 f0       	breq	.+6      	; 0x62a <accl+0x312>
 624:	41 e0       	ldi	r20, 0x01	; 1
 626:	40 0f       	add	r20, r16
 628:	01 c0       	rjmp	.+2      	; 0x62c <accl+0x314>
 62a:	41 2f       	mov	r20, r17
 62c:	40 83       	st	Z, r20
 62e:	78 94       	sei
 630:	40 91 52 02 	lds	r20, 0x0252
 634:	4f 5f       	subi	r20, 0xFF	; 255
 636:	40 93 52 02 	sts	0x0252, r20
 63a:	4d 30       	cpi	r20, 0x0D	; 13
 63c:	08 f4       	brcc	.+2      	; 0x640 <accl+0x328>
 63e:	bb cf       	rjmp	.-138    	; 0x5b6 <accl+0x29e>
 640:	28 98       	cbi	0x05, 0	; 5
 642:	81 e3       	ldi	r24, 0x31	; 49
 644:	50 de       	rcall	.-864    	; 0x2e6 <send_byte>
 646:	88 e0       	ldi	r24, 0x08	; 8
 648:	4e de       	rcall	.-868    	; 0x2e6 <send_byte>
 64a:	28 9a       	sbi	0x05, 0	; 5
 64c:	e1 ee       	ldi	r30, 0xE1	; 225
 64e:	f4 e0       	ldi	r31, 0x04	; 4
 650:	31 97       	sbiw	r30, 0x01	; 1
 652:	f1 f7       	brne	.-4      	; 0x650 <accl+0x338>
 654:	00 c0       	rjmp	.+0      	; 0x656 <accl+0x33e>
 656:	00 00       	nop
 658:	28 98       	cbi	0x05, 0	; 5
 65a:	81 eb       	ldi	r24, 0xB1	; 177
 65c:	44 de       	rcall	.-888    	; 0x2e6 <send_byte>
 65e:	80 e0       	ldi	r24, 0x00	; 0
 660:	42 de       	rcall	.-892    	; 0x2e6 <send_byte>
 662:	8e b5       	in	r24, 0x2e	; 46
 664:	28 9a       	sbi	0x05, 0	; 5
 666:	28 98       	cbi	0x05, 0	; 5
 668:	88 e3       	ldi	r24, 0x38	; 56
 66a:	3d de       	rcall	.-902    	; 0x2e6 <send_byte>
 66c:	80 e0       	ldi	r24, 0x00	; 0
 66e:	3b de       	rcall	.-906    	; 0x2e6 <send_byte>
 670:	28 9a       	sbi	0x05, 0	; 5
 672:	81 ee       	ldi	r24, 0xE1	; 225
 674:	94 e0       	ldi	r25, 0x04	; 4
 676:	01 97       	sbiw	r24, 0x01	; 1
 678:	f1 f7       	brne	.-4      	; 0x676 <accl+0x35e>
 67a:	00 c0       	rjmp	.+0      	; 0x67c <accl+0x364>
 67c:	00 00       	nop
 67e:	28 98       	cbi	0x05, 0	; 5
 680:	88 eb       	ldi	r24, 0xB8	; 184
 682:	31 de       	rcall	.-926    	; 0x2e6 <send_byte>
 684:	80 e0       	ldi	r24, 0x00	; 0
 686:	2f de       	rcall	.-930    	; 0x2e6 <send_byte>
 688:	8e b5       	in	r24, 0x2e	; 46
 68a:	28 9a       	sbi	0x05, 0	; 5
 68c:	10 92 52 02 	sts	0x0252, r1
 690:	40 e0       	ldi	r20, 0x00	; 0
 692:	2d e6       	ldi	r18, 0x6D	; 109
 694:	32 e0       	ldi	r19, 0x02	; 2
 696:	ec e6       	ldi	r30, 0x6C	; 108
 698:	f2 e0       	ldi	r31, 0x02	; 2
 69a:	81 ec       	ldi	r24, 0xC1	; 193
 69c:	90 e0       	ldi	r25, 0x00	; 0
 69e:	0f 2e       	mov	r0, r31
 6a0:	fe e6       	ldi	r31, 0x6E	; 110
 6a2:	cf 2e       	mov	r12, r31
 6a4:	f2 e0       	ldi	r31, 0x02	; 2
 6a6:	df 2e       	mov	r13, r31
 6a8:	f0 2d       	mov	r31, r0
 6aa:	10 e0       	ldi	r17, 0x00	; 0
 6ac:	50 e0       	ldi	r21, 0x00	; 0
 6ae:	43 5e       	subi	r20, 0xE3	; 227
 6b0:	5d 4f       	sbci	r21, 0xFD	; 253
 6b2:	da 01       	movw	r26, r20
 6b4:	fc 90       	ld	r15, X
 6b6:	f8 94       	cli
 6b8:	d9 01       	movw	r26, r18
 6ba:	5c 91       	ld	r21, X
 6bc:	40 81       	ld	r20, Z
 6be:	54 13       	cpse	r21, r20
 6c0:	04 c0       	rjmp	.+8      	; 0x6ca <accl+0x3b2>
 6c2:	dc 01       	movw	r26, r24
 6c4:	4c 91       	ld	r20, X
 6c6:	40 62       	ori	r20, 0x20	; 32
 6c8:	4c 93       	st	X, r20
 6ca:	d9 01       	movw	r26, r18
 6cc:	ec 90       	ld	r14, X
 6ce:	00 81       	ld	r16, Z
 6d0:	60 2f       	mov	r22, r16
 6d2:	70 e0       	ldi	r23, 0x00	; 0
 6d4:	d6 01       	movw	r26, r12
 6d6:	4c 91       	ld	r20, X
 6d8:	50 e0       	ldi	r21, 0x00	; 0
 6da:	41 50       	subi	r20, 0x01	; 1
 6dc:	51 09       	sbc	r21, r1
 6de:	64 17       	cp	r22, r20
 6e0:	75 07       	cpc	r23, r21
 6e2:	19 f0       	breq	.+6      	; 0x6ea <accl+0x3d2>
 6e4:	41 e0       	ldi	r20, 0x01	; 1
 6e6:	40 0f       	add	r20, r16
 6e8:	01 c0       	rjmp	.+2      	; 0x6ec <accl+0x3d4>
 6ea:	41 2f       	mov	r20, r17
 6ec:	e4 12       	cpse	r14, r20
 6ee:	01 c0       	rjmp	.+2      	; 0x6f2 <accl+0x3da>
 6f0:	ff cf       	rjmp	.-2      	; 0x6f0 <accl+0x3d8>
 6f2:	60 81       	ld	r22, Z
 6f4:	40 91 6f 02 	lds	r20, 0x026F
 6f8:	50 91 70 02 	lds	r21, 0x0270
 6fc:	46 0f       	add	r20, r22
 6fe:	51 1d       	adc	r21, r1
 700:	da 01       	movw	r26, r20
 702:	fc 92       	st	X, r15
 704:	00 81       	ld	r16, Z
 706:	60 2f       	mov	r22, r16
 708:	70 e0       	ldi	r23, 0x00	; 0
 70a:	d6 01       	movw	r26, r12
 70c:	4c 91       	ld	r20, X
 70e:	50 e0       	ldi	r21, 0x00	; 0
 710:	41 50       	subi	r20, 0x01	; 1
 712:	51 09       	sbc	r21, r1
 714:	64 17       	cp	r22, r20
 716:	75 07       	cpc	r23, r21
 718:	19 f0       	breq	.+6      	; 0x720 <accl+0x408>
 71a:	41 e0       	ldi	r20, 0x01	; 1
 71c:	40 0f       	add	r20, r16
 71e:	01 c0       	rjmp	.+2      	; 0x722 <accl+0x40a>
 720:	41 2f       	mov	r20, r17
 722:	40 83       	st	Z, r20
 724:	78 94       	sei
 726:	40 91 52 02 	lds	r20, 0x0252
 72a:	4f 5f       	subi	r20, 0xFF	; 255
 72c:	40 93 52 02 	sts	0x0252, r20
 730:	4a 30       	cpi	r20, 0x0A	; 10
 732:	08 f4       	brcc	.+2      	; 0x736 <accl+0x41e>
 734:	bb cf       	rjmp	.-138    	; 0x6ac <accl+0x394>
 736:	6e 01       	movw	r12, r28
 738:	b7 e0       	ldi	r27, 0x07	; 7
 73a:	cb 0e       	add	r12, r27
 73c:	d1 1c       	adc	r13, r1
 73e:	b1 2c       	mov	r11, r1
 740:	0f 2e       	mov	r0, r31
 742:	fd e6       	ldi	r31, 0x6D	; 109
 744:	4f 2e       	mov	r4, r31
 746:	f2 e0       	ldi	r31, 0x02	; 2
 748:	5f 2e       	mov	r5, r31
 74a:	f0 2d       	mov	r31, r0
 74c:	0c e6       	ldi	r16, 0x6C	; 108
 74e:	12 e0       	ldi	r17, 0x02	; 2
 750:	0f 2e       	mov	r0, r31
 752:	f1 ec       	ldi	r31, 0xC1	; 193
 754:	6f 2e       	mov	r6, r31
 756:	71 2c       	mov	r7, r1
 758:	f0 2d       	mov	r31, r0
 75a:	0f 2e       	mov	r0, r31
 75c:	fe e6       	ldi	r31, 0x6E	; 110
 75e:	8f 2e       	mov	r8, r31
 760:	f2 e0       	ldi	r31, 0x02	; 2
 762:	9f 2e       	mov	r9, r31
 764:	f0 2d       	mov	r31, r0
 766:	ab 2c       	mov	r10, r11
 768:	28 98       	cbi	0x05, 0	; 5
 76a:	82 ef       	ldi	r24, 0xF2	; 242
 76c:	bc dd       	rcall	.-1160   	; 0x2e6 <send_byte>
 76e:	fe 01       	movw	r30, r28
 770:	31 96       	adiw	r30, 0x01	; 1
 772:	7f 01       	movw	r14, r30
 774:	8b 2d       	mov	r24, r11
 776:	b7 dd       	rcall	.-1170   	; 0x2e6 <send_byte>
 778:	8e b5       	in	r24, 0x2e	; 46
 77a:	d7 01       	movw	r26, r14
 77c:	8d 93       	st	X+, r24
 77e:	7d 01       	movw	r14, r26
 780:	ac 15       	cp	r26, r12
 782:	bd 05       	cpc	r27, r13
 784:	b9 f7       	brne	.-18     	; 0x774 <accl+0x45c>
 786:	28 9a       	sbi	0x05, 0	; 5
 788:	b0 92 52 02 	sts	0x0252, r11
 78c:	8b 2d       	mov	r24, r11
 78e:	e1 e0       	ldi	r30, 0x01	; 1
 790:	f0 e0       	ldi	r31, 0x00	; 0
 792:	ec 0f       	add	r30, r28
 794:	fd 1f       	adc	r31, r29
 796:	e8 0f       	add	r30, r24
 798:	f1 1d       	adc	r31, r1
 79a:	50 81       	ld	r21, Z
 79c:	f8 94       	cli
 79e:	f2 01       	movw	r30, r4
 7a0:	90 81       	ld	r25, Z
 7a2:	d8 01       	movw	r26, r16
 7a4:	8c 91       	ld	r24, X
 7a6:	98 13       	cpse	r25, r24
 7a8:	04 c0       	rjmp	.+8      	; 0x7b2 <accl+0x49a>
 7aa:	f3 01       	movw	r30, r6
 7ac:	80 81       	ld	r24, Z
 7ae:	80 62       	ori	r24, 0x20	; 32
 7b0:	80 83       	st	Z, r24
 7b2:	d2 01       	movw	r26, r4
 7b4:	6c 91       	ld	r22, X
 7b6:	f8 01       	movw	r30, r16
 7b8:	40 81       	ld	r20, Z
 7ba:	24 2f       	mov	r18, r20
 7bc:	30 e0       	ldi	r19, 0x00	; 0
 7be:	d4 01       	movw	r26, r8
 7c0:	8c 91       	ld	r24, X
 7c2:	90 e0       	ldi	r25, 0x00	; 0
 7c4:	01 97       	sbiw	r24, 0x01	; 1
 7c6:	28 17       	cp	r18, r24
 7c8:	39 07       	cpc	r19, r25
 7ca:	19 f0       	breq	.+6      	; 0x7d2 <accl+0x4ba>
 7cc:	81 e0       	ldi	r24, 0x01	; 1
 7ce:	84 0f       	add	r24, r20
 7d0:	01 c0       	rjmp	.+2      	; 0x7d4 <accl+0x4bc>
 7d2:	8a 2d       	mov	r24, r10
 7d4:	68 13       	cpse	r22, r24
 7d6:	01 c0       	rjmp	.+2      	; 0x7da <accl+0x4c2>
 7d8:	ff cf       	rjmp	.-2      	; 0x7d8 <accl+0x4c0>
 7da:	f8 01       	movw	r30, r16
 7dc:	80 81       	ld	r24, Z
 7de:	e0 91 6f 02 	lds	r30, 0x026F
 7e2:	f0 91 70 02 	lds	r31, 0x0270
 7e6:	e8 0f       	add	r30, r24
 7e8:	f1 1d       	adc	r31, r1
 7ea:	50 83       	st	Z, r21
 7ec:	d8 01       	movw	r26, r16
 7ee:	4c 91       	ld	r20, X
 7f0:	84 2f       	mov	r24, r20
 7f2:	90 e0       	ldi	r25, 0x00	; 0
 7f4:	f4 01       	movw	r30, r8
 7f6:	20 81       	ld	r18, Z
 7f8:	30 e0       	ldi	r19, 0x00	; 0
 7fa:	21 50       	subi	r18, 0x01	; 1
 7fc:	31 09       	sbc	r19, r1
 7fe:	82 17       	cp	r24, r18
 800:	93 07       	cpc	r25, r19
 802:	19 f0       	breq	.+6      	; 0x80a <accl+0x4f2>
 804:	81 e0       	ldi	r24, 0x01	; 1
 806:	84 0f       	add	r24, r20
 808:	01 c0       	rjmp	.+2      	; 0x80c <accl+0x4f4>
 80a:	8a 2d       	mov	r24, r10
 80c:	d8 01       	movw	r26, r16
 80e:	8c 93       	st	X, r24
 810:	78 94       	sei
 812:	80 91 52 02 	lds	r24, 0x0252
 816:	8f 5f       	subi	r24, 0xFF	; 255
 818:	80 93 52 02 	sts	0x0252, r24
 81c:	86 30       	cpi	r24, 0x06	; 6
 81e:	08 f4       	brcc	.+2      	; 0x822 <accl+0x50a>
 820:	b6 cf       	rjmp	.-148    	; 0x78e <accl+0x476>
 822:	bf ef       	ldi	r27, 0xFF	; 255
 824:	e4 e3       	ldi	r30, 0x34	; 52
 826:	fc e0       	ldi	r31, 0x0C	; 12
 828:	b1 50       	subi	r27, 0x01	; 1
 82a:	e0 40       	sbci	r30, 0x00	; 0
 82c:	f0 40       	sbci	r31, 0x00	; 0
 82e:	e1 f7       	brne	.-8      	; 0x828 <accl+0x510>
 830:	00 c0       	rjmp	.+0      	; 0x832 <accl+0x51a>
 832:	00 00       	nop
 834:	99 cf       	rjmp	.-206    	; 0x768 <accl+0x450>

00000836 <main>:
 */

#include "main.h"

int main(void)
{
 836:	cf 93       	push	r28
 838:	df 93       	push	r29
 83a:	cd b7       	in	r28, 0x3d	; 61
 83c:	de b7       	in	r29, 0x3e	; 62
 83e:	69 97       	sbiw	r28, 0x19	; 25
 840:	0f b6       	in	r0, 0x3f	; 63
 842:	f8 94       	cli
 844:	de bf       	out	0x3e, r29	; 62
 846:	0f be       	out	0x3f, r0	; 63
 848:	cd bf       	out	0x3d, r28	; 61
	/* DECLERATIONS */
	//char sendt0 = 'M';
	char send = 'O';
	
	// TIMER & LED (PORTK) AS OUTPUTS
	DDRK = 0xFF;
 84a:	8f ef       	ldi	r24, 0xFF	; 255
 84c:	80 93 07 01 	sts	0x0107, r24
	PORTK = 0xFF;
 850:	e8 e0       	ldi	r30, 0x08	; 8
 852:	f1 e0       	ldi	r31, 0x01	; 1
 854:	80 83       	st	Z, r24
	PORTK = 0;
 856:	10 82       	st	Z, r1
	
	// TIMER & LED (PORTA) AS OUTPUTS
	DDRA = 0xFF;
 858:	81 b9       	out	0x01, r24	; 1
	PORTA = 0xFF;
 85a:	82 b9       	out	0x02, r24	; 2
	PORTA = 0;
 85c:	12 b8       	out	0x02, r1	; 2

	// SWITCHES AS INPUTS
	DDRA &= ~(1 << PORTD0);		// CTL
 85e:	08 98       	cbi	0x01, 0	; 1
	DDRA &= ~(1 << PORTD1);		// AUTO
 860:	09 98       	cbi	0x01, 1	; 1
	DDRA &= ~(1 << PORTD2);		// PWR
 862:	0a 98       	cbi	0x01, 2	; 1
	
	#ifdef PCICR
		/* Enable pin change interrupt for PD4 which is controlled by SW CTL
		 * First we need to enable pin change interrupt for the wanted port.
		 */
		PCICR = (1 << PCIE0);
 864:	81 e0       	ldi	r24, 0x01	; 1
 866:	80 93 68 00 	sts	0x0068, r24

		// Then we need to set the pin change port mask to get the bit we want.
		PCMSK0 = (1 << PCINT4);
 86a:	80 e1       	ldi	r24, 0x10	; 16
 86c:	80 93 6b 00 	sts	0x006B, r24
	#endif
	
	cli();
 870:	f8 94       	cli
 */
static void uart_init(void)
{
#if defined UBRR0H
	// get the values from the setbaud tool
	UBRR0H = UBRRH_VALUE;
 872:	10 92 c5 00 	sts	0x00C5, r1
	UBRR0L = UBRRL_VALUE;
 876:	8c e0       	ldi	r24, 0x0C	; 12
 878:	80 93 c4 00 	sts	0x00C4, r24
#else
#error "Device is not supported by the driver"
#endif

#if USE_2X
	UCSR0A |= (1 << U2X0);
 87c:	e0 ec       	ldi	r30, 0xC0	; 192
 87e:	f0 e0       	ldi	r31, 0x00	; 0
 880:	80 81       	ld	r24, Z
 882:	82 60       	ori	r24, 0x02	; 2
 884:	80 83       	st	Z, r24
#endif

	// enable RX and TX and set interrupts on rx complete
	UCSR0B = (1 << RXEN0) | (1 << TXEN0) | (1 << RXCIE0);
 886:	88 e9       	ldi	r24, 0x98	; 152
 888:	80 93 c1 00 	sts	0x00C1, r24

	// 8-bit, 1 stop bit, no parity, asynchronous UART
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00) | (0 << USBS0) |
 88c:	86 e0       	ldi	r24, 0x06	; 6
 88e:	80 93 c2 00 	sts	0x00C2, r24
 * \retval struct ring_buffer a struct containing the ring buffer
 */
static inline struct ring_buffer ring_buffer_init(uint8_t *buffer, uint8_t size)
{
	struct ring_buffer ring;
	ring.write_offset = 0;
 892:	1d 8a       	std	Y+21, r1	; 0x15
	ring.read_offset = 0;
 894:	1e 8a       	std	Y+22, r1	; 0x16
	ring.size = size;
 896:	24 e1       	ldi	r18, 0x14	; 20
 898:	2f 8b       	std	Y+23, r18	; 0x17
	ring.buffer = buffer;
 89a:	8e e3       	ldi	r24, 0x3E	; 62
 89c:	92 e0       	ldi	r25, 0x02	; 2
 89e:	99 8f       	std	Y+25, r25	; 0x19
 8a0:	88 8f       	std	Y+24, r24	; 0x18
	return ring;
 8a2:	85 e0       	ldi	r24, 0x05	; 5
 8a4:	fe 01       	movw	r30, r28
 8a6:	75 96       	adiw	r30, 0x15	; 21
 8a8:	de 01       	movw	r26, r28
 8aa:	16 96       	adiw	r26, 0x06	; 6
 8ac:	01 90       	ld	r0, Z+
 8ae:	0d 92       	st	X+, r0
 8b0:	8a 95       	dec	r24
 8b2:	e1 f7       	brne	.-8      	; 0x8ac <main+0x76>
 8b4:	85 e0       	ldi	r24, 0x05	; 5
 8b6:	fe 01       	movw	r30, r28
 8b8:	36 96       	adiw	r30, 0x06	; 6
 8ba:	de 01       	movw	r26, r28
 8bc:	11 96       	adiw	r26, 0x01	; 1
 8be:	01 90       	ld	r0, Z+
 8c0:	0d 92       	st	X+, r0
 8c2:	8a 95       	dec	r24
 8c4:	e1 f7       	brne	.-8      	; 0x8be <main+0x88>
			(0 << UPM01) | (0 << UPM00) | (0 << UMSEL01) |
			(0 << UMSEL00);

	// initialize the in and out buffer for the UART
	ring_buffer_out = ring_buffer_init(out_buffer, BUFFER_SIZE);
 8c6:	85 e0       	ldi	r24, 0x05	; 5
 8c8:	fe 01       	movw	r30, r28
 8ca:	31 96       	adiw	r30, 0x01	; 1
 8cc:	ac e6       	ldi	r26, 0x6C	; 108
 8ce:	b2 e0       	ldi	r27, 0x02	; 2
 8d0:	01 90       	ld	r0, Z+
 8d2:	0d 92       	st	X+, r0
 8d4:	8a 95       	dec	r24
 8d6:	e1 f7       	brne	.-8      	; 0x8d0 <main+0x9a>
 * \retval struct ring_buffer a struct containing the ring buffer
 */
static inline struct ring_buffer ring_buffer_init(uint8_t *buffer, uint8_t size)
{
	struct ring_buffer ring;
	ring.write_offset = 0;
 8d8:	1d 8a       	std	Y+21, r1	; 0x15
	ring.read_offset = 0;
 8da:	1e 8a       	std	Y+22, r1	; 0x16
	ring.size = size;
 8dc:	2f 8b       	std	Y+23, r18	; 0x17
	ring.buffer = buffer;
 8de:	83 e5       	ldi	r24, 0x53	; 83
 8e0:	92 e0       	ldi	r25, 0x02	; 2
 8e2:	99 8f       	std	Y+25, r25	; 0x19
 8e4:	88 8f       	std	Y+24, r24	; 0x18
	return ring;
 8e6:	85 e0       	ldi	r24, 0x05	; 5
 8e8:	fe 01       	movw	r30, r28
 8ea:	75 96       	adiw	r30, 0x15	; 21
 8ec:	de 01       	movw	r26, r28
 8ee:	50 96       	adiw	r26, 0x10	; 16
 8f0:	01 90       	ld	r0, Z+
 8f2:	0d 92       	st	X+, r0
 8f4:	8a 95       	dec	r24
 8f6:	e1 f7       	brne	.-8      	; 0x8f0 <main+0xba>
 8f8:	85 e0       	ldi	r24, 0x05	; 5
 8fa:	fe 01       	movw	r30, r28
 8fc:	70 96       	adiw	r30, 0x10	; 16
 8fe:	de 01       	movw	r26, r28
 900:	1b 96       	adiw	r26, 0x0b	; 11
 902:	01 90       	ld	r0, Z+
 904:	0d 92       	st	X+, r0
 906:	8a 95       	dec	r24
 908:	e1 f7       	brne	.-8      	; 0x902 <main+0xcc>
	ring_buffer_in = ring_buffer_init(in_buffer, BUFFER_SIZE);
 90a:	85 e0       	ldi	r24, 0x05	; 5
 90c:	fe 01       	movw	r30, r28
 90e:	3b 96       	adiw	r30, 0x0b	; 11
 910:	a7 e6       	ldi	r26, 0x67	; 103
 912:	b2 e0       	ldi	r27, 0x02	; 2
 914:	01 90       	ld	r0, Z+
 916:	0d 92       	st	X+, r0
 918:	8a 95       	dec	r24
 91a:	e1 f7       	brne	.-8      	; 0x914 <main+0xde>
	uart_init();
	
	// Enable interrupts
	sei();
 91c:	78 94       	sei
		for (int i = 0; i < 8; i++) {

			/* This algorithm is really important, as it
			 * sends data over a single pin on the port 
			 */
			PORTA = (1 << PORTA3) & (((send >> i) & 1) << PORTA3);
 91e:	88 e0       	ldi	r24, 0x08	; 8
 920:	82 b9       	out	0x02, r24	; 2
			PORTK = (1 << PORTK1) & (((send >> i) & 1) << PORTK1);
 922:	82 e0       	ldi	r24, 0x02	; 2
 924:	80 93 08 01 	sts	0x0108, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 928:	87 ea       	ldi	r24, 0xA7	; 167
 92a:	91 e6       	ldi	r25, 0x61	; 97
 92c:	01 97       	sbiw	r24, 0x01	; 1
 92e:	f1 f7       	brne	.-4      	; 0x92c <main+0xf6>
 930:	00 c0       	rjmp	.+0      	; 0x932 <main+0xfc>
 932:	00 00       	nop
 934:	87 ea       	ldi	r24, 0xA7	; 167
 936:	91 e6       	ldi	r25, 0x61	; 97
 938:	01 97       	sbiw	r24, 0x01	; 1
 93a:	f1 f7       	brne	.-4      	; 0x938 <main+0x102>
 93c:	00 c0       	rjmp	.+0      	; 0x93e <main+0x108>
 93e:	00 00       	nop
				uart_putchar(test_string[cnt]);
			}*/
			
			_delay_ms (100); // 100 ms delay
			
			accl();
 940:	eb dc       	rcall	.-1578   	; 0x318 <accl>

00000942 <_exit>:
 942:	f8 94       	cli

00000944 <__stop_program>:
 944:	ff cf       	rjmp	.-2      	; 0x944 <__stop_program>
